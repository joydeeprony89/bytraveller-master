// <auto-generated />
using System;
using ByTraveller.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ByTraveller.EntityFramework.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20190524154703_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ByTraveller.Model.Models.Card", b =>
                {
                    b.Property<int>("CardId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CardGalleryImageId");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<bool>("IsActive");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedOn");

                    b.Property<string>("Name");

                    b.Property<string>("ShortDescription");

                    b.Property<int>("SubMenuItemId");

                    b.HasKey("CardId");

                    b.HasIndex("CardGalleryImageId");

                    b.HasIndex("SubMenuItemId");

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("ByTraveller.Model.Models.CardDetail", b =>
                {
                    b.Property<int>("CardDetailId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Activities");

                    b.Property<int>("CardId");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<bool>("HasReview");

                    b.Property<string>("LocalFood");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedOn");

                    b.Property<string>("Name");

                    b.Property<string>("PlaceDescription");

                    b.Property<string>("PlacesToEat");

                    b.Property<string>("PlacesToStay");

                    b.Property<string>("PlacesToVisit");

                    b.HasKey("CardDetailId");

                    b.HasIndex("CardId")
                        .IsUnique();

                    b.ToTable("CardDetails");
                });

            modelBuilder.Entity("ByTraveller.Model.Models.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryCode")
                        .HasMaxLength(20);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<bool>("IsActive");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedOn");

                    b.Property<string>("Name")
                        .HasMaxLength(200);

                    b.HasKey("CountryId");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("ByTraveller.Model.Models.CountryState", b =>
                {
                    b.Property<int>("CountryStateId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryId");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<bool>("IsActive");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedOn");

                    b.Property<string>("Name")
                        .HasMaxLength(200);

                    b.Property<string>("StateCode")
                        .HasMaxLength(20);

                    b.HasKey("CountryStateId");

                    b.HasIndex("CountryId");

                    b.ToTable("CountryStates");
                });

            modelBuilder.Entity("ByTraveller.Model.Models.Footer", b =>
                {
                    b.Property<int>("FooterId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CopyRightText");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<bool>("IsActive");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedOn");

                    b.Property<string>("Name");

                    b.Property<int>("Version");

                    b.HasKey("FooterId");

                    b.ToTable("Footers");
                });

            modelBuilder.Entity("ByTraveller.Model.Models.HeaderMainMenu", b =>
                {
                    b.Property<int>("HeaderMainMenuId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<int>("Index");

                    b.Property<bool>("IsActive");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedOn");

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.HasKey("HeaderMainMenuId");

                    b.ToTable("HeaderMainMenus");
                });

            modelBuilder.Entity("ByTraveller.Model.Models.HeaderSubMenu", b =>
                {
                    b.Property<int>("HeaderSubMenuId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<int>("HeaderMainMenuId");

                    b.Property<int>("Index");

                    b.Property<bool>("IsActive");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedOn");

                    b.Property<string>("Name")
                        .HasMaxLength(200);

                    b.HasKey("HeaderSubMenuId");

                    b.HasIndex("HeaderMainMenuId");

                    b.ToTable("HeaderSubMenus");
                });

            modelBuilder.Entity("ByTraveller.Model.Models.Image", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CardDetailId");

                    b.Property<byte>("ImageType");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name");

                    b.Property<byte>("TargetType");

                    b.HasKey("ImageId");

                    b.HasIndex("CardDetailId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("ByTraveller.Model.Models.SocialWebSite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<int?>("FooterId");

                    b.Property<bool>("IsActive");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedOn");

                    b.Property<string>("Name");

                    b.Property<string>("SiteImage");

                    b.Property<string>("SiteRedirectUrl");

                    b.Property<string>("SiteToken");

                    b.HasKey("Id");

                    b.HasIndex("FooterId");

                    b.ToTable("SocialWebSites");
                });

            modelBuilder.Entity("ByTraveller.Model.Models.StateCity", b =>
                {
                    b.Property<int>("StateCityId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CityCode")
                        .HasMaxLength(20);

                    b.Property<int>("CountryStateId");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<int>("Index");

                    b.Property<bool>("IsActive");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedOn");

                    b.Property<string>("Name")
                        .HasMaxLength(200);

                    b.HasKey("StateCityId");

                    b.HasIndex("CountryStateId");

                    b.ToTable("StateCities");
                });

            modelBuilder.Entity("ByTraveller.Model.Models.SubMenuItem", b =>
                {
                    b.Property<int>("SubMenuItemId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HeaderSubMenuId");

                    b.Property<string>("Name")
                        .HasMaxLength(200);

                    b.Property<string>("RedirectUrl");

                    b.HasKey("SubMenuItemId");

                    b.HasIndex("HeaderSubMenuId");

                    b.ToTable("SubMenuItems");
                });

            modelBuilder.Entity("ByTraveller.Model.Models.Card", b =>
                {
                    b.HasOne("ByTraveller.Model.Models.Image", "CardGallery")
                        .WithMany()
                        .HasForeignKey("CardGalleryImageId");

                    b.HasOne("ByTraveller.Model.Models.SubMenuItem")
                        .WithMany("Cards")
                        .HasForeignKey("SubMenuItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ByTraveller.Model.Models.CardDetail", b =>
                {
                    b.HasOne("ByTraveller.Model.Models.Card", "Card")
                        .WithOne("CardDetail")
                        .HasForeignKey("ByTraveller.Model.Models.CardDetail", "CardId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ByTraveller.Model.Models.CountryState", b =>
                {
                    b.HasOne("ByTraveller.Model.Models.Country", "Country")
                        .WithMany("CountryStates")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ByTraveller.Model.Models.HeaderSubMenu", b =>
                {
                    b.HasOne("ByTraveller.Model.Models.HeaderMainMenu", "HeaderMainMenu")
                        .WithMany("HeaderSubMenus")
                        .HasForeignKey("HeaderMainMenuId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ByTraveller.Model.Models.Image", b =>
                {
                    b.HasOne("ByTraveller.Model.Models.CardDetail")
                        .WithMany("Images")
                        .HasForeignKey("CardDetailId");
                });

            modelBuilder.Entity("ByTraveller.Model.Models.SocialWebSite", b =>
                {
                    b.HasOne("ByTraveller.Model.Models.Footer")
                        .WithMany("SocialWebSites")
                        .HasForeignKey("FooterId");
                });

            modelBuilder.Entity("ByTraveller.Model.Models.StateCity", b =>
                {
                    b.HasOne("ByTraveller.Model.Models.CountryState")
                        .WithMany("StateCities")
                        .HasForeignKey("CountryStateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ByTraveller.Model.Models.SubMenuItem", b =>
                {
                    b.HasOne("ByTraveller.Model.Models.HeaderSubMenu", "HeaderSubMenu")
                        .WithMany("SubMenuItems")
                        .HasForeignKey("HeaderSubMenuId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
